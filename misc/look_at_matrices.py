import sympy as sp
import numpy as np
from numpy import linalg
print(117124.256821516733452523463452452342345254524352345234623445 ** 0.5)

v = sp.sympify(sp.sin(117124.256821516733452523463452452342345254524352345234623445))
r = sp.simplify(v - sp.sin(342.2342134000000000000000000000000000000000000000000001 ** 2))
print(r)

# t = 1
# print(t)

# x = sp.Matrix([0,0,0,0,0,0,0,0,0,0,0,1])

# G = sp.Matrix([
#     [0, t, t, 0, 0, 0, 0, 0, 0, 0, t, 0],
#     [t, 0, 0, t, 0, 0, 0, 0, 0, 0, 0, t],
#     [t, 0, 0, t, t, 0, 0, 0, 0, 0, 0, 0],
#     [0, t, t, 0, 0, t, 0, 0, 0, 0, 0, 0],
#     [0, 0, t, 0, 0, t, t, 0, 0, 0, 0, 0],
#     [0, 0, 0, t, t, 0, 0, t, 0, 0, 0, 0],
#     [0, 0, 0, 0, t, 0, 0, t, t, 0, 0, 0],
#     [0, 0, 0, 0, 0, t, t, 0, 0, t, 0, 0],
#     [0, 0, 0, 0, 0, 0, t, 0, 0, t, t, 0],
#     [0, 0, 0, 0, 0, 0, 0, t, t, 0, 0, t],
#     [t, 0, 0, 0, 0, 0, 0, 0, t, 0, 0, t],
#     [0, t, 0, 0, 0, 0, 0, 0, 0, t, t, 0],
# ])

# H = sp.Matrix([
#     [0, t, t, 0, 0, 0, 0, 0, 0, 0, t, 0],
#     [t, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, t],
#     [t, 0, 0, 0, t, 0, 0, t, 0, 0, 0, 0],
#     [0, 0, 0, 0, 0, t, 0, 0, 0, t, t, 0],
#     [0, 0, t, 0, 0, t, 0, 0, 0, 0, 0, t],
#     [0, 0, 0, t, t, 0, 0, 0, t, 0, 0, 0],
#     [0, t, 0, 0, 0, 0, 0, t, t, 0, 0, 0],
#     [0, 0, t, 0, 0, 0, t, 0, 0, t, 0, 0],
#     [0, 0, 0, 0, 0, t, t, 0, 0, 0, t, 0],
#     [0, 0, 0, t, 0, 0, 0, t, 0, 0, 0, t],
#     [t, 0, 0, t, 0, 0, 0, 0, t, 0, 0, 0],
#     [0, t, 0, 0, t, 0, 0, 0, 0, t, 0, 0],
# ])
# for i in range(12):
#     for j in range(12):
#         if H[i,j] != H[j,i]:
#             raise Exception("dammit")
#         if G[i,j] != G[j,i]:
#             raise Exception("dammit")

# print("G:")
# e = G.eigenvals()
# for k in e:
#     print(f"{k}:{e[k]}")
# print()
# print("H:")
# e = H.eigenvals()
# for k in e:
#     print(f"{k}:{e[k]}")